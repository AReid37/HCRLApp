L.E.G.E.N.D
[ ] 0# -- New bug report/idea and category issue number
[X] 0# -- Resolved bug report/implemented idea and completed category issue number
[.] 0# -- Ignored bug report/idea and category issue number



---------------------
       B U G S
---------------------
[X] 1# Remove escape characters from the lines of the version log when decoding (particulary remove: /n /t /a /f /r).

[X] 2# After data is saved, set all 'Previous Version' variables to match the current saved version, so that it is not resaving the same data and overwriting a valid file save backup.

[X] 3# When a log file's contents are being displayed, the section tags must be detected only by starting with '[' and ending with ']', not by containing both.

[X] 4# ResLib.Integrate(); when searching through loose contents for matching contents, remove data ID suffixes that are symbols before attempting to match

[X] 5# ResLib.Integrate() -> LegDat.AddKeyDef(); when matching against definitions of Legend Datas, compare at lowercase to avoid case-insensitive duplicates.

[X] 6# @Log Legend View Page, highlight must only be highlighting the legend key. The 'key' within its definitions must not be highlighted.

[X] 7# A non-wordy data ID must be identified as a key that at least contains numbers and letters, and ends with a number. 
    >> Real Testing Examples (NPC_12, NPC_12_Alt_1, Player_0_0, Player_0_1, Tiles_2_Beach, Tiles_59_2, Tiles_199-gross, Tree_Branches_13, Wires2, Wraith_Eyes) 
    >> Possible Resolve: when given a legend key and its definition, only replace the key at the front of the ID with its definition, and leave the rest of the ID as is (example, Item_23 is 'i23', Tiles_42-small is 't42-small')

[X] 8# Gen Steam Log Page -> Submit version log ContentAdditionals should also deliver their related content name from parent ConBase. The only nullable value going into the library reference instance should be the 'optionalName' property of 'Addit' array.

[X] 9# The value '#' as a argument to a table data element is ignored and does not print. It should be invalidated as a value for table header/data elements as the proper usage of '#' is only as plain text.

[X] 10# Gen Steam Log Page -> Formatter Parser: Comparisons against escape characters may not work. If any value returned contains an escape character, that character must be appropriately replaced with the escape characte code (&00; for '"', &01; for '#')

[X] 11# Content Integrity: Verify Content Integrity -> Displays contents as being 100% verified even though 1 content item is confirmed missing (should always be max of 99.9% if ANY items are missing)

[X] 12# Content Integrity: Verify Content Integrity -> Folder editing is very unclear; what to enter and what it will do is a mystery to the user

[X] 13# LibrarySearch.HighlightSearchArg -> Rebuild algorithm to sift through each character and build the 'matching text' without fail. There too many unpredictable variations to be place in switch-cases alone

[X] 14# The Dbug.cs class will need to be revamped. The nested debug session have certainly hit their limit before, and now disable good-to-know debug session due to its incapacity. I put forth a threading idea. Where each session is logged uninterupted (except to note that a certain session triggered at a time within an ongoing 'thread' duration). They can be given an ID or just simply noted by name. Each should have a time stamp of when it was ran. All sessions occur in parallel but are individual from each other. Also, before exiting appilication, the sessions can be listed by name in the order that they were identified (may be helpful for browing debug file).

[ ] 15# The SortWords method seems to be jamming up and slowing down some processes. Will have to rework for larger list of words. I think implementing some sort of mass skip per check will do the trick. For example, with a growing list of over 10 elements to compare, the comparison can skip to every 10th until the word is to be placed before. One the last iteration of 10's gap, the iteration back cycles and compares those last 10s to find where that word should be inserted.

[ ] 16# A revamped and simplified syntax for version logs. The current version log template and syntax has some redundancies that tend to become clutter. The syntax does not change the information that is to be decoded, but the way to input the logs information. This should be done especially if planning to publicize this application.

[ ] 17# ...


----- F R O M   B U G / I D E A   S U B M I S S I O N   S Y S T E M -----
[X] 1# Updated entries were discarded when integrating version log. Entries in question were overhauled updates. Log version: v1.38. Pls Fix.

[X] 2# Bug report and idea suggestion print out is repeating. Best guess is because the new submission aren't considered 'old' the first time the report is saved.

[X] 3# Generating Steam Log: Update items keep showing related content name as some 'Loose Content' thing and it's really messing up my print out. PLS FIX ASAP! I've been reading the updates and this one hasn't been fixed when it was claimed to be fixed.

[X] 4# Formatter syntax error might be missing. Line in question: [ repeat {UpdatedCount}; $nl # "&01; " {Updated:#,relatedContent} ]. ... When generating steam log with the line above, the '#' interupts the '$nl' element producing some weird tags like "[nl 1] [nl 2]". The '#' probably shouldn't follow after a steam format tag.

[X] 5# Using command 'add2' in formatter when only two lines place new line at bottom instead placing it before line 2.

[X] 6# While submitting v1.43 version log, I noticed that some additional contents (that remained as such, not Additional -> Added contents) were not detected as being updated in the same version. While not a big deal, it would be nice to have this pointed out by the system anyway.

[X] 7# Not sure how to explain it, but self updating upon an additional content that does not become its own thing (Additional -> Added) seems to absolutely BREAK the log submission system. I wasn't luucky enough to realize this before I lost file reversion to fix the mess that made easily. PLS FIX ASAP! 
        DEV_NOTE - Turns out this bug was less of a self-updating issue, but an oversight that the symbol '^' may be used as a user-defined legend key. Thus, when decoding, the line of 'additionals' from file would be misidentified as 'updates' if any additional data IDs contained '^'. Many apologies I couldn't figure this out any sooner.

[X] 8# Generate Steam Log is still receiving no related name for additional contents. It keeps showing up as '/?'.
        DEV_NOTE - This has been a persistent bug that is hard to test for. I have conducted a more thorough revision of the related code and fixed a few issues. This SHOULD NOT be happening anymore.

[ ] 9# I changed the legend key in one of my previous logs and the contents I added didn't detect that change when went to overwrite that log. 

[ ] 10# ...





---------------------
      I D E A S
---------------------
[X] 1# A bug report/idea suggestion route that is accessible from any style input by using a keyphrase (Suggest '@dbi'). Ideas and bugs are saved in a separate file; Ideas & bugs may also be stored with main file data.

[X] 2# Display what base contents the loose contents were connected to after contents have been integrated after a submission. Any mistakes can be undone from a reversion.

[X] 3# Log Legend View should also show from which log version the library's contents are based

[X] 4# Each category within 'Settings->ConInt->ViewAllDataIDs' should show how many Data IDs they contain

[X] 5# The Miscellaneous category within 'Settings->ConInt->ViewAllDataIDs' can seperate its IDs into alphanumeric groups when there are many of them. Ex, A-M group and N-Z group.

[X] 6# Fuse Legend View and Summary View pages into one ('Log Legends and Summaries').

[.] 7# When displaying the decoded version logs, if there is a decode issue, the text may also display or highlight where the error occured when possible (highlight or note where in the text the issue occured).

[X] 8# Within Log Submission Page, encoding save data can be triggered once the main submission page is being exited, rather than after each submitted version log. This allows a proper [file] reversion of log 'session' and greatly decreases any bloating of the Dbug session flush file.

[.] 9# Reversion; Version Reversion, specific version removal is possible, however only if the version's contents is not referenced in future version (Either allowed or denied reversion thereafter; Generally useful only the case of overwriting a log version's info)
    
    [X] alt.9# Log Submission; If a Version Log is submitted containing version information that already exists within the library, the option to overwrite the pre-existing information may be available (must include an extensive report on the results of overwriting previous information) 

[X] 10# Using a certain syntax to substitute a keycode with symbols that are used for log decoding (example: using "&00" to sub for "-", or using "&04" to sub for "("). File encoding/decoding won't be affected and the data remains true to it's name as it bypasses the possible errors from log decoding.

[.] 11# The option to restart the program on command (either in Main Menu or Settings Menu).

[X] 12# Version reversion may only allow the ability to clear the library's data if only one version's data exists (instead of shunning the user to add more data).

[X] 13# Content Validator's 'Folder Paths' parameter could also allow enabling/disabling a certain folder path during the CIV process. A much better approach than to keep adding and removing folder paths for each CIV process.

[X] 14# An extra syntax change for 'Updated' section that allows self-updating for entries that need to be updated to content that has been added in the same version.

[.] 15# SFormatterLibRef: initialization could condense data ID strings using Extensions.CreateNumericDataIDRanges() method. Alternatively, a new property for library references ('condensedIds' or 'rangeIds') could be introduced for specifically condensed data ID strings

[ ] 16# Allow the Content Integrity Verification system to have a secondary actionable: Moving contents from one folder to another (requires double confirmation). Useful for setting up the XNB workstation. 

    [ ] 16a# Perhaps make this its own thing; relocater or sorter, idk. The files could be fetched after a CIV process and sent to this object. Whatever it may be it should be a settings thing...

[X] 17# PROGRESS BAR! Create a progress bar function for all processes and display this progress to user. Especially helpful where processes can take more than a second (Ex, CIV process).

[X] 18# File chooser sub-page. When the user is prompted to select a file or folder open a removable sub-page which allows the user to select the desired file or folder the prompt requests. This sub-page could be opened with a prompt (suggest '@browse'), giving way to manually entering a folder or file path alternatively.

[X] 19# Ability to view an expanded summary of all the additions and changes made in a specified version in Legends and Summaries: Summary Page.

[X] 20# Profiles! Profiles dammit, profiles! I want to be able to separate my different library files without manually switching them out. Can we get some user profiles up in this place?

[ ] 21# Better looking Main Menu. Versus the title page art and some of the other stylish pages the Main Menu seems very dull. Probably could use some decoration.

[ ] 22# Could I know when the steam log generator hits the limit? I've been making pretty lengthy logs and the limit seems to be 8.18k characters.

[ ] 23# I would like the option to skip the title screen and get right to the main menu. 

[ ] 24# 

[ ] 25# ...


----- F R O M   B U G / I D E A   S U B M I S S I O N   S Y S T E M -----
[X] 1# Remove newlines in bug report descriptions. It looks very weird. Thx.

[X] 2# I think the library search page is pretty awesome at its job. If possible, I'd like to see a filter specifically for data ids. It can get pretty tough sorting through a thousand entries and having all the content names and stuff mixed in to the fray.

[ ] 3# Library Search idea. When a search result pops up, using displaying the first (expanded) data ID of the item could be really helpful and really cool. For example, the Dirt Block would show its first data ID like 'Item_0'.

[ ] 4# The file reversion thing is cool but is there a way to save a specific, non-overwritten file that I can guarantee as a safe return place? That wouuld be hella cool if I could do that.

[ ] 5# ...
