-- !open --
HCRLA Version Log Syntax v2, Tester Log
	PURPOSE: 
	Testing for proper function of all logging syntax (all-tester) and testing error cases for robust data validation and user feedback.
	This is mostly for testing error cases, all other valid logging conditions not tested here are tested with example logs

	0th test
-- !close --


-- test invalid character: %
%
Data line %


-- NO SERIOUSLY, I AM NOT DOING THIS IDENTICAL ARGUEMENT ERROR CHECKING SHIT. If you're so stupid that I need to do that then consider yourself too stupid to follow instructions and review your own paper work. This is just not going to work. There are too many conditions where arguements are okay to be matching and the log decoder will normally sort things out along the way. Too many flippin' conditions to be bothered with checking for 'IDENTICAL ARGUEMENTS'. That's enough. I don't want to be spending an extra one~two weeks having to debug a million and one conditions to find where arguements are actually not identical and actually are identical. Hell naw. SUE ME.



-- ------------------------- secVer ------------------------- --
-- !open --
VALID LINES
	VERSION
	MAJOR 1 MINOR 0
	-- or --
	VERSION
	1.0	

VERSION ERROR TESTING CASES
	z: Version first section: other section tags should not parse
	a: Ver syntax before section tag: should not parse
	b: Version tag keyword: incorrect letter casing, not on lone line
	c: -> Identify version tag 
	c...: + 'already parsed tag' error
	d: Expanded syntax: incorrect letter casing, missing one other keyword, incorrect order of keywords, missing arguements, too many keywords
	e: Short syntax: missing arguements, missing short-syntax key
	f: Both syntaxes: Incorrect arguements: NaN, "a < 0", "b > 99", "b < 0"
	g: --> Get version number (test both syntaxes)
	g...: + 'already got version number' error
	h: Imparsible error: rubbish

-- !close --

-- z
ADDED
TTA
LEGEND
UPDATED

-- a
MAJOR 1 MINOR 0
1.01

-- b
version
Version
vErsIon
VERSION tag

-- c
VERSION
VERSION
--
-- d
major 1 minor 0
MAJOR 1 minor 0
major 1 MINOR 0
MAJOR 1 0
2 MINOR 0
MINOR 0 MAJOR 1
MAJOR MINOR 0
MAJOR 1 MINOR
MAJOR 1 MAJOR 1 MINOR 0
MAJOR 1 MINOR 0 MINOR 0
--
-- e
1.
.0
.
100
--
-- f
MAJOR x MINOR 0
MAJOR 1 MINOR y
x.0
1.y
MAJOR -1 MINOR 0
MAJOR 1 MINOR -1
MAJOR 1 MINOR 100
-1.0
1.-1
1.100
--
-- g
MAJOR 1 MINOR 0
1.0
--
-- h
this is not parsable: V

-- ------------------------- END secVer ------------------------- --







-- ========================= secAdd ========================= --
-- !open --
VALID LINES
	ADDED
	REPLACE i> WITH Item
	Smoli> AS i10 t10 p10 d10
	Bigi> AS i20 t20,21 p20~22 g20 d20

ADDED ERROR TESTING CASES
	z: Section already found (post parse): version
	a: Add syntax before section tag: should not be parsed
	b: Added tag keyword: incorrect letter casing, not on lone line
	c: -> Identify added tag 
	c...: + 'already parsed tag' error
	d: Replacements: incorrect letter casing, missing one other keyword, incorrect order of keywords, too many keywords
	e: Replacements: missing arguements, incorrect arguements: "#" (plain numbers), identical arguements
	f: --> Get replacements - placeholder and substitution
	f...: + 'duplicate placeholder' and 'duplicate replacement group' error
	g: Content: incorrect letter casing, missing arguements, too many keywords, identical arguements (?)
	h: Content: Internal Name: incorrect arguements: '#', "Data IDs" (?), "&99"
	i: Content: Data IDs: incorrect arguements: '#', "Internal Name" (?), grouping syntax issue (x#,#~#)
	j: --> Get added contents
	j...: + 'duplicate content' error
	k: Content: Data IDs: incorrect arguements: duplicate IDs
	l: Imparsible error: using version syntax, rubbish


	At (?) - this may be omitted and left to user to correct any arising errors
-- !close --

-- z
VERSION

-- a
REPLACE i> WITH Item
SmolItem AS i10 t10 p10 d10
BigItem AS i20 t20,21 p20~22 g20 d20

-- b
Added
added
AdDEd

-- c
ADDED
ADDED
--
-- d
replace i> With Item
REPLACE i> Item
i> WITH Item
WITH Item REPLACE i>
REPLACE i> REPLACE Item WITH i>
REPLACE i> WITH i> WITH Item
--
-- e
REPLACE WITH i>
REPLACE i> WITH 
REPLACE WITH
REPLACE 9 WITH Item
REPLACE i> WITH 6
REPLACE i> WITH i>
REPLACE Item WITH Item
--
-- f
REPLACE i> WITH Item
REPLACE i> WITH Item
REPLACE i> WITH ItemFlame
--
-- g
SmolItem as i10
AS t10
SmolItem AS 
BigItem AS i20 AS t20
-- SmolItem AS SmolItem <-- skip -->
-- i20 AS i20 <-- skip -->
--
-- h
10 AS p10
&99 AS p10
-- p10 AS p10,11 <-- skip -->
-- p10 AS p10 <-- skip -->
--
-- i
BigItem AS 20
SmolItem AS d20~22,23
-- BigItem AS BigItem <-- skip -->
-- p10 AS p10,11 <-- skip -->
--
-- j
Smoli> AS i10 t10 p10 d10
Bigi> AS i20 t20,21 p20~22 g20 d20
Smoli> AS i10 t10 p10 d10
Bigi> AS i20 t20,21 p20~22 g20 d20
--
-- k
Smoli> AS i10 i10 t10 p10 d10
Bigi> AS i20 t20,21 p21 p20~22 g20 d20
--
-- l
MAJOR 1 MINOR 0
this is not parsable: A


-- ========================= END secAdd ========================= --








-- ------------------------- secAdt ------------------------- --
-- !open --
VALID LINES
	ADDITIONAL
	p15 d15 AS MidEffects TO MidItem BY i15
	d11 AS SmolDust TO SmolItem BY i10
	-- the above also tests for loose and ready-connect addits

ADDITIONAL ERROR TESTING CASES
	a: Section already found (post parse): added
	b: Adt syntax before section tag: should not be parsed
	c: Additional tag keyword: incorrect letter casing, not on lone line
	d: --> Identify additional tag
	d...: + 'already parsed tag' error
	e: Full syntax: incorrect letter casing, missing one other keyword (only BY), incorrect order of keywords, too many keywords, duplicate arguements (?)
	f: Full syntax: Data IDs: incorrect arguements: '#', "Related Data ID" (?), grouping syntax issue (x#,#~#)
	g: Full syntax: Opt Name: incorrect arguements: '#', "Related Internal Name", "Data ID" (?), "Rel ID" (?), "&99"
	h: Full syntax: Rel Name: incorrect arguements: '#', "Match with Rel ID" (?), "&99"
	i: Full syntax: Rel ID: incorrect arguements: '#', "Data IDs" (?), only 1 ID, grouping syntax issue (x#,#~#), missing arguement
	j: --> Get additional content (full and omitted syntax)
	j...: + 'duplicate additional content' error
	k: Any syntax: Data IDs: incorrect arguements: duplicate IDs
	k: Imparsible error: using version syntax, rubbish


	At (?) - this may be omitted and left to user to correct any arising errors
-- !close --

-- a
ADDED

-- b
p15 d15 AS MidEffects TO MidItem BY i15
d11 AS SmolDust TO SmolItem BY i10

-- c
Additional
ADDITIONAL additional

-- d 
ADDITIONAL
ADDITIONAL
--
-- e   
p15 as mideffects to miditem by i15
p15 AS MidEffects TO MidItem i15
p15 TO MidEffects BY MidItem AS i15
p15 TO MidEffects AS MidItem BY i15
p15 AS MidEffects AS MidEffects TO MidItem BY i15
p15 AS MidEffects TO MidItem TO MidItem BY i15
p15 AS MidEffects TO MidItem BY i15 BY i15
-- 
-- f
11 AS SmolDust TO SmolItem BY i10
d11,12~14 AS SmolDust TO SmolItem BY i10
-- i10 AS SmolDust TO SmolItem BY i10 <-- skip -->
--
-- g
d11 AS 2345 TO SmolItem BY i10
d11 AS &99 TO SmolItem BY i10
-- d11 AS SmolItem TO SmolItem BY i10 <-- skip -->
-- 
-- h
d11 AS SmolDust TO 10 BY i10
p15 AS MidEffects TO &99 BY i15
-- p15 AS MidEffects TO i15 BY i15 <-- skip -->
-- 
-- i
p15 AS MidEffects TO MidItem BY 15
p15 AS MidEffects TO MidItem BY i15,16 
p15 AS MidEffects TO MidItem BY i15~17
p15 AS MidEffects TO MidItem BY i15~17,18
p15 AS MidEffects TO MidItem BY
-- p15 AS MidEffects TO MidItem BY p15 <-- skip -->
--
-- j
p15 d15 AS MidEffects TO MidItem BY i15
d11 AS SmolDust TO SmolItem BY i10
p15 d15 TO MidItem BY i15
d11 TO SmolItem BY i10
p15 d15 AS MidEffects BY i15
d11 AS SmolDust BY i10
p15 d15 BY i15
d11 BY i10
--
-- k
p15 d15 p15 AS MidEffects TO MidItem BY i15
d11 d11 TO SmolItem BY i10
--
-- l
MAJOR 1 MINOR 0
this is not parsable: D

-- ------------------------- END secAdt ------------------------- --










-- ========================= secTtaTca ========================= --
-- !open --
VALID LINES
	TTA
	12
	-- or --
	TCA 
	12

TTA/TCA ERROR TESTING CASES
	a: Section already found (post parse): additional
	b: Tta syntax before section tag: should not be parsed (is just numbers)
	c: TTA tag keywords: incorrect letter casing, not on lone line
	d: --> Identify tta/tca tag
	d:...: + 'alrerady parsed tag' error with alternative keyword
	e: TTA number: incorrect arguements: too many numbers (with spaces), NaN, "x < 0"
	f: --> Get TTA Number
	f...: + 'already got tta number' error, tta verification error (opt)
	g: Imparsible error: using version syntax, rubbish

-- !close --

-- a
ADDITIONAL

-- b
4

-- c
tta 
ttc TTA

-- d
TTA 
TCA
--
-- e
1 30  8
2i
-4
0
--
-- f
12
12
-- actually number is '15'
--
-- g
MAJOR 1 MINOR 0
this is not parsable: T

-- ========================= END secTtaTca ========================= --










-- ------------------------- secUpd ------------------------- --
-- !open --
VALID LINES
	UPDATED
	SmolItem BY i10 WITH Sharpened the colors and shape of this item
	MidItem BY i15 WITH Slightly softened the shape of this item
	-- the above tests both loose and auto-connect updates

UPDATED ERROR TESTING CASES
	a: Section already found (post parse): tta (using alt keyword)
	b: Upd syntax before section tag: should not be parsed
	c: Updated tag keyword: incorrect letter casing, not on lone line
	d: --> Identify updated tag
	d...: + 'already parsed tag' error
	e: Full syntax: incorrect letter casing, missing one other keyword (only WITH), incorrect order of keywords, too many keywords, duplicate arguements (?)
	f: Full syntax: Rel Name: incorrect arguements: '#', "Match with Rel ID" (?), "&99"
	g: Full syntax: Rel ID: incorrect arguements: '#', only 1 ID, grouping syntax issue (x#,#~#), missing arguement
	h: Full syntax: Change Desc: '#', "Not Rel ID" (?), "Not Rel Name" (?), "&99", missing arguement
	i: --> Get updated content (full and omitted syntax)
	i...: + 'duplicate updated content' error
	j: Imparsible error: using version syntax, rubbish

	At (?) - this may be omitted and left to user to correct any arising errors
-- !close --

-- a
TCA

-- b
SmolItem BY i10 WITH Sharpened the colors and shape of this item
MidItem BY i15 WITH Slightly softened the shape of this item

-- c
updated
UPDATED!

-- d
UPDATED
UPDATED
--
-- e
SmolItem by i10 with Sharpened~
SmolItem BY i10 Sharpened~
SmolItem WITH i10 BY Sharpened~
SmolItem BY i10 BY i10 WITH Sharpened~
SmolItem BY i10 WITH Sharpened~ WITH Sharpened~
--
-- f
45 BY i15 WITH Slightly~
&99 BY i15 WITH Slightly~
-- i15 BY i15 WITH Slightly~ <-- skip -->
--
-- g
MidItem BY 15 WITH Slightly~
MidItem BY i15,16 WITH Slightly~
MidItem BY i15~17 WITH Slightly~
MidItem BY i15,16~18 WITH Slightly~
MidItem BY WITH Slightly~
-- 
-- h
SmolItem BY i10 WITH 1010 0100
SmolItem BY i10 WITH &99
SmolItem BY i10 WITH
-- SmolItem BY i10 WITH SmolItem <-- skip --> 
-- SmolItem BY i10 WITH i10 <-- skip -->
--
-- i
SmolItem BY i10 WITH Sharpened the colors and shape of this item
MidItem BY i15 WITH Slightly softened the shape of this item
BY i10 WITH Sharpened the colors and shape of this item
BY i15 WITH Slightly softened the shape of this item
i10 WITH Sharpened the colors and shape of this item
i15 WITH Slightly softened the shape of this item
--
-- j
MAJOR 1 MINOR 0
this is not parsable: U

-- ------------------------- END secUpd ------------------------- --









-- ========================= secLeg ========================= --
-- !open --
VALID LINES
	LEGEND
	i AS Item
	t AS Tiles
	p AS Projectile
	g AS Glow
	d AS Dust
	-- omit one of the above and create an unused legend entry

LEGEND ERROR TESTING CASES
	a: Section already found (post parse): updated
	b: Leg syntax before section tag: should not be parsed
	c: Legend tag keyword: incorrect letter casing, not on lone line
	d: --> Identify legend tag
	d...: + 'already parsed tag' error
	e: Legend: incorrect letter casing, missing keyword, too many keywords, identical arguements (?)
	f: Legend: Key: neither is '#' or contains '#', '~', "no spaces warning", 3 or less chars (?)
	g: Legend: Def: neither is '#' or contains '#', matches legend key (?)
	h: --> Get legend content
	h...: + 'duplicate legend key/definition' errors, unnoted / unneccessary legend entry errors
	i: Imparsible error: using version syntax, rubbish

	At (?) - this may be omitted and left to user to correct any arising errors
-- !close --

-- a
UPDATED

-- b
i AS Item
t AS Tiles

-- c
leg end
L E G E N D

-- d
LEGEND
LEGEND
--
-- e
i as Item
t Tiles
i AS Item AS Item
--
-- f
100 45 AS Item
u5 AS Unknown
~ AS NumRng
i f AS Item Flame
--
-- g
i AS 700
t AS Tiles_3
--
-- h
i AS Item
t AS Tiles
p AS Projectile
g AS Glow
-- next 2, dupe key and dupe definition
i AS Items
x AS Item
-- vv  for 'unnecessary' warning
tt AS Tree Tops
-- d AS Dust -- hidden for 'unnoted' warning
--
-- i
MAJOR 1 MINOR 0
this is not parsable: L

-- ========================= END secLeg ========================= --











-- ------------------------- secSum ------------------------- --
-- !open --
VALID LINES
	SUMMARY
	AS Introduced Big and Smol items and textures
	AS Modifications to Mid Item

SUMMARY ERROR TESTING CASES
	a: Section already found (post parse): legend (using alt keyword)
	b: Sum syntax before section tag: should not be parsed
	c: Summary tag keyword: incorrect letter casing, not on lone line
	d: --> Identify summary tag
	d...: + 'already parsed tag' error
	e: Full syntax: incorrect letter casing, missing keyword, too many keywords
	f: Full syntax: Summary Part: incorrect arguements: missing, '#'
	g: --> Get summary content
	g...: + 'duplicate summary part' error
	h: Imparsible error: using version syntax, rubbish

	At (?) - this may be omitted and left to user to correct any arising errors
-- !close --

-- a
LEGEND

-- b
AS Introduced Big and Smol items and textures
AS Modifications to Mid Item

-- c
summary SUMMARY
SUMARY

-- d
SUMMARY
SUMMARY
--
-- e
as Introduced~
Introduced~
AS Big AS Introduced~
--
-- f
AS 125 478
AS 
--
-- g
AS Introduced Big and Smol items and textures
AS Modifications to Mid Item
AS Introduced Big and Smol items and textures
AS Modifications to Mid Item
--
-- h
MAJOR 1 MINOR 0
this is not parsable: S

-- ------------------------- END secSum ------------------------- --

